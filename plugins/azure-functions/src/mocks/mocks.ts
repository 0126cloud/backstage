/*
 * Copyright 2022 The Backstage Authors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

export const entityMock = {
  metadata: {
    namespace: 'default',
    annotations: {
      'portal.azure.com/functions-name': 'func-mock',
    },
    name: 'sample-azure-function-service',
    description:
      'A service for testing Backstage functionality.',
    uid: 'c009b513-d053-4b3f-9429-8433a145e943',
  },
  apiVersion: 'backstage.io/v1alpha1',
  kind: 'Component',
  spec: {
    type: 'service',
    owner: 'dev_group@example.com',
    lifecycle: 'experimental',
  },
};

// https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{resourceGroup}}/providers/Microsoft.Web/sites/{{functionsName}}?api-version=2022-03-01
export const functionResponseMock = {
  id: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg_mock/providers/Microsoft.Web/sites/func-mock",
  name: "func-mock",
  type: "Microsoft.Web/sites",
  kind: "functionapp",
  location: "West Europe",
  tags: {},
  properties: {
    name: "func-mock",
    state: "Running",
    hostNames: [
      "func-mock.azurewebsites.net"
    ],
    webSpace: "rg_mock-WestEuropewebspace",
    selfLink: "https://mockurl.api.azurewebsites.windows.net:454/subscriptions/00000000-0000-0000-0000-000000000000/webspaces/rg_mock-WestEuropewebspace/sites/func-mock",
    repositorySiteName: "func-mock",
    owner: null,
    usageState: "Normal",
    enabled: true,
    adminEnabled: true,
    enabledHostNames: [
      "func-mock.azurewebsites.net",
      "func-mock.scm.azurewebsites.net"
    ],
    siteProperties: {
      metadata: null,
      properties: [
        {
          name: "LinuxFxVersion",
          value: ""
        },
        {
          name: "WindowsFxVersion",
          value: null
        }
      ],
      appSettings: null
    },
    availabilityState: "Normal",
    sslCertificates: null,
    csrs: [],
    cers: null,
    siteMode: null,
    hostNameSslStates: [
      {
        name: "func-mock.azurewebsites.net",
        sslState: "Disabled",
        ipBasedSslResult: null,
        virtualIP: null,
        thumbprint: null,
        toUpdate: null,
        toUpdateIpBasedSsl: null,
        ipBasedSslState: "NotConfigured",
        hostType: "Standard"
      },
      {
        name: "func-mock.scm.azurewebsites.net",
        sslState: "Disabled",
        ipBasedSslResult: null,
        virtualIP: null,
        thumbprint: null,
        toUpdate: null,
        toUpdateIpBasedSsl: null,
        ipBasedSslState: "NotConfigured",
        hostType: "Repository"
      }
    ],
    computeMode: null,
    serverFarm: null,
    serverFarmId: "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg_mock/providers/Microsoft.Web/serverfarms/plan-mock",
    reserved: false,
    isXenon: false,
    hyperV: false,
    lastModifiedTimeUtc: "2022-09-02T11:09:58.9033333",
    storageRecoveryDefaultState: "Running",
    contentAvailabilityState: "Normal",
    runtimeAvailabilityState: "Normal",
    secretsCollection: [],
    vnetRouteAllEnabled: false,
    containerAllocationSubnet: null,
    useContainerLocalhostBindings: null,
    vnetImagePullEnabled: false,
    vnetContentShareEnabled: false,
    siteConfig: {
      numberOfWorkers: 1,
      defaultDocuments: null,
      netFrameworkVersion: null,
      phpVersion: null,
      pythonVersion: null,
      nodeVersion: null,
      powerShellVersion: null,
      linuxFxVersion: "",
      windowsFxVersion: null,
      requestTracingEnabled: null,
      remoteDebuggingEnabled: null,
      remoteDebuggingVersion: null,
      httpLoggingEnabled: null,
      azureMonitorLogCategories: null,
      acrUseManagedIdentityCreds: false,
      acrUserManagedIdentityID: null,
      logsDirectorySizeLimit: null,
      detailedErrorLoggingEnabled: null,
      publishingUsername: null,
      publishingPassword: null,
      appSettings: null,
      metadata: null,
      connectionStrings: null,
      machineKey: null,
      handlerMappings: null,
      documentRoot: null,
      scmType: null,
      use32BitWorkerProcess: null,
      webSocketsEnabled: null,
      alwaysOn: true,
      javaVersion: null,
      javaContainer: null,
      javaContainerVersion: null,
      appCommandLine: null,
      managedPipelineMode: null,
      virtualApplications: null,
      winAuthAdminState: null,
      winAuthTenantState: null,
      customAppPoolIdentityAdminState: null,
      customAppPoolIdentityTenantState: null,
      runtimeADUser: null,
      runtimeADUserPassword: null,
      loadBalancing: null,
      routingRules: null,
      experiments: null,
      limits: null,
      autoHealEnabled: null,
      autoHealRules: null,
      tracingOptions: null,
      vnetName: null,
      vnetRouteAllEnabled: null,
      vnetPrivatePortsCount: null,
      publicNetworkAccess: null,
      cors: null,
      push: null,
      apiDefinition: null,
      apiManagementConfig: null,
      autoSwapSlotName: null,
      localMySqlEnabled: null,
      managedServiceIdentityId: null,
      xManagedServiceIdentityId: null,
      keyVaultReferenceIdentity: null,
      ipSecurityRestrictions: null,
      ipSecurityRestrictionsDefaultAction: null,
      scmIpSecurityRestrictions: null,
      scmIpSecurityRestrictionsDefaultAction: null,
      scmIpSecurityRestrictionsUseMain: null,
      http20Enabled: false,
      minTlsVersion: null,
      minTlsCipherSuite: null,
      supportedTlsCipherSuites: null,
      scmMinTlsVersion: null,
      ftpsState: null,
      preWarmedInstanceCount: null,
      functionAppScaleLimit: 0,
      elasticWebAppScaleLimit: null,
      healthCheckPath: null,
      fileChangeAuditEnabled: null,
      functionsRuntimeScaleMonitoringEnabled: null,
      websiteTimeZone: null,
      minimumElasticInstanceCount: 1,
      azureStorageAccounts: null,
      http20ProxyFlag: null,
      sitePort: null,
      antivirusScanEnabled: null,
      storageType: null
    },
    deploymentId: "func-mock",
    slotName: null,
    trafficManagerHostNames: null,
    sku: "Standard",
    scmSiteAlsoStopped: false,
    targetSwapSlot: null,
    hostingEnvironment: null,
    hostingEnvironmentProfile: null,
    clientAffinityEnabled: false,
    clientCertEnabled: false,
    clientCertMode: "Required",
    clientCertExclusionPaths: null,
    hostNamesDisabled: false,
    domainVerificationIdentifiers: null,
    customDomainVerificationId: "",
    kind: "functionapp",
    inboundIpAddress: "",
    possibleInboundIpAddresses: "",
    ftpUsername: "func-mock\\$func-mock",
    ftpsHostName: "ftps://mockurl.ftp.azurewebsites.windows.net/site/wwwroot",
    outboundIpAddresses: "",
    possibleOutboundIpAddresses: "",
    containerSize: 1536,
    dailyMemoryTimeQuota: 0,
    suspendedTill: null,
    siteDisabledReason: 0,
    functionExecutionUnitsCache: null,
    maxNumberOfWorkers: null,
    homeStamp: "mockurl",
    cloningInfo: null,
    hostingEnvironmentId: null,
    tags: {},
    resourceGroup: "rg_mock",
    defaultHostName: "func-mock.azurewebsites.net",
    slotSwapStatus: null,
    httpsOnly: false,
    redundancyMode: "None",
    inProgressOperationId: null,
    geoDistributions: null,
    privateEndpointConnections: [],
    publicNetworkAccess: null,
    buildVersion: null,
    targetBuildVersion: null,
    migrationState: null,
    eligibleLogCategories: "FunctionAppLogs",
    storageAccountRequired: false,
    virtualNetworkSubnetId: null,
    keyVaultReferenceIdentity: "SystemAssigned",
    privateLinkIdentifiers: null
  }
};
