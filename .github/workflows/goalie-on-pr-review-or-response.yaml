# on a review from someone in the reviewers group, remove the awaiting-review label and add the awaiting-author label
name: Update labels for awaiting review
on:
  pull_request_review:
    types: [submitted]
  pull_request_review_comment:
    types: [created]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: SvanBoxel/codeowners-action@v1
        id: codeowner
        with: 
          path: './.github/CODEOWNERS'
      - uses: actions/github-script@v5
        id: get-reviewer-group-members
        with:
          github-token: ${{ secrets.GH_SERVICE_ACCOUNT_TOKEN }}
          script: |
            // Get all teams and their respective members
            const {data: teams} = await github.request('GET /orgs/{org}/teams', {
              org: context.payload.organization.login,
            })

            const groupMembers = await Promise.all(
              teams.map(
                async (team) => {
                  const { data } = await github.rest.teams.listMembersInOrg({
                    org: context.payload.organization.login,
                    team_slug: team.slug,
                  });

                  return { team: team.slug, data };
                }
              )
            )

            console.log(groupMembers)
            console.log(${{ steps.codeowners.output.codeowners }})
            return groupMembers;
            
      # - uses: actions/github-script@v5
      #   id: get-all-current-reviews
      #   with:
      #     script: |
      #       // get all requested reviewers for the PR
      #       const {data: allReviews } = await github.rest.pulls.listReviews({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: context.issue.number,
      #       });

      #       return allReviews;
            
      # - uses: actions/github-script@v5
      #   id: fix-labels
      #   with:
      #     script: |
      #       // if it's the author, always add awaiting-review label
      #       const isAuthor = context.payload.pull_request.user.login === context.actor
      #        if (isAuthor) {
      #         github.rest.issues.addLabels({
      #           issue_number: context.issue.number,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           labels: ['awaiting-review']
      #         });

      #         return
      #       }

      #       // if it's not the author. go through all the required reviewers, and see if there's a review from at least one person in
      #       // in those groups. Then remove the label

      #       const requestedReviewers = ${{steps.get-requested-reviewers.outputs.result}}
      #       const reviewerGroupMembers = ${{steps.get-reviewer-group-members.outputs.result}}
      #       const allCurrentReviews = ${{steps.get-all-current-reviews.outputs.result}}         
            
      #       // HMM We have a problem here, that the requested reviewers is only there until 
      #       const reviewersHasReview = requestedReviewers.teams.map((team) => {
      #         const groupMembers = reviewerGroupMembers.find(({ team: teamSlug }) => teamSlug === team.slug)
      #         const hasReview = allCurrentReviews.some(({ user: { login: reviewer } }) => groupMembers.some(({ login: groupMember}) => reviewer === groupMember))
      #         return { name: team.slug, hasReview }
      #       })

      #       console.log(reviewersHasReview);
