# on a review from someone in the reviewers group, remove the awaiting-review label and add the awaiting-author label
name: Update labels for awaiting review
on:
  pull_request_review:
    types: [submitted]
  pull_request_review_comment:
    types: [created]
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - run: npm install minimatch
      - uses: SvanBoxel/codeowners-action@v1
        id: codeowners
        with: 
          path: ./.github/CODEOWNERS

      - uses: actions/github-script@v5
        id: get-all-group-members
        with:
          github-token: ${{ secrets.GH_SERVICE_ACCOUNT_TOKEN }}
          script: |
            // Get all teams and their respective members
            const {data: teams} = await github.request('GET /orgs/{org}/teams', {
              org: context.payload.organization.login,
            })

            const groupMembers = await Promise.all(
              teams.map(
                async (team) => {
                  const { data } = await github.rest.teams.listMembersInOrg({
                    org: context.payload.organization.login,
                    team_slug: team.slug,
                  });

                  return { team: team.slug, data };
                }
              )
            )
          
            return groupMembers;
            
      - uses: actions/github-script@v5
        id: get-all-changed-files
        with:
          script: |
            const { data: allFiles } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            return allFiles;

      - uses: actions/github-script@v5
        id: get-all-current-reviews
        with:
          script: |
            const { data: allReviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            return allReviews;
            
      - uses: actions/github-script@v5
        id: fix-labels
        with:
          script: |
            // if it's the author, always add awaiting-review label
            // const isAuthor = context.payload.pull_request.user.login === context.actor
            //  if (isAuthor) {
            //   github.rest.issues.addLabels({
            //     issue_number: context.issue.number,
            //     owner: context.repo.owner,
            //     repo: context.repo.repo,
            //     labels: ['awaiting-review']
            //   });

            //   return
            // }

            // Go through each file changed and go through each codeowner entry and use minimatch to see if the file matches
            // strip the backstage group from the name?
            // If it does match push the owner to a list of reviewers
            // check to see the reviews and if there is at least one matching reviewer from those group

            const changedFiles = ${{ steps.get-all-changed-files.outputs.result }}
            const codeowners = ${{ steps.codeowners.outputs.codeowners }}
            const allReviews = ${{ steps.get-all-current-reviews.outputs.result }}
            const groupMembers = ${{ steps.get-all-group-members.outputs.result }}
            const minimatch = require('minimatch');

            const reviewers = new Set();

            for (const file of changedFiles) {
              for (const [pattern, owners] of Object.entries(codeowners)) {
                if (minimatch(file.filename, codeowner.pattern)) {
                  for (const owner of owners) {
                    reviewers.add(owner);
                  }
                }
              }
            }

            console.log(reviewers);
            
